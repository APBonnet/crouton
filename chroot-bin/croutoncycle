#!/bin/sh -e
# Copyright (c) 2013 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

USAGE="${0##*/} next|prev|cros|list|#
Cycles through running graphical chroots.
    next: switch to the next display
    prev: switch to the previous display
    cros: switch directly to Chromium OS
    #: switch directly to the chroot owning the specified display number
    list: list all of the active displays and the associated chroot name"

case "$1" in
[Ll]*) cmd='l';;
[Cc]*) cmd='0';;
[Pp]*) cmd='p';;
[Nn]*) cmd='n';;
[0-9]*) cmd="$(($1))";;
*) echo "$USAGE" 1>&2; exit 2;;
esac

export XAUTHORITY=''

# Prepare display list for easier looping
displist=''
for disp in /tmp/.X*-lock; do
    disp="${disp#*X}"
    displist="$displist${displist:+" "}${disp%-lock}"
done

# Figure out the current display number
tty="`cat '/sys/class/tty/tty0/active'`"
if [ "$tty" = 'tty1' ]; then
    # Either in Chromium OS or an Aura chroot. Check the active window.
    curdisp="`host-x11 croutonwmtools list 1n | awk '{ print $3; exit }'`"
    if [ "${curdisp#:}" != "$curdisp" ]; then
        curdisp="${curdisp%%.*}"
        curdisp="${curdisp#:}"
    else
        curdisp='0'
    fi
else
    # Poll the displays to figure out which one owns this VT
    curdisp=''
    for disp in ${displist#0}; do
        if DISPLAY=":$disp" xprop -root 'XFree86_VT' \
                | grep -q " ${tty#tty}\$"; then
            curdisp="$disp"
            break
        fi
    done
    if [ -z "$curdisp" ]; then
        curdisp="$tty"
    fi
fi

# List the displays if requested
if [ "$cmd" = 'l' ]; then
    for disp in $displist; do
        echo -n "$disp"
        if [ "$disp" = "$curdisp" ]; then
            echo -n '*'
        else
            echo -n ' '
        fi
        if [ "$disp" = '0' ]; then
            echo " Chromium OS"
        else
            disp="`DISPLAY=":$disp" xprop -root CROUTON_NAME`"
            if [ "${disp%\"}" != "$disp" ]; then
                disp="${disp%\"}"
                echo " ${disp#*\"}"
            else
                echo " Unknown"
            fi
        fi
    done
    exit 0
fi

# Determine the target display
if [ -n "${cmd#[pn]}" ]; then
    destdisp="$cmd"
elif [ "${curdisp#tty}" != "$curdisp" ]; then
    destdisp='0'
elif [ "$cmd" = 'p' ]; then
    destdisp="${displist##* }"
    for disp in $displist; do
        if [ "$disp" = "$curdisp" ]; then
            break
        fi
        destdisp="$disp"
    done
elif [ "$cmd" = 'n' ]; then
    destdisp=''
    for disp in $displist; do
        if [ -n "$destdisp" ]; then
            destdisp="$disp"
            break
        elif [ "$disp" = "$curdisp" ]; then
            destdisp="${displist%% *}"
        fi
    done
else
    destdisp='0'
fi

# No-op on no-op
if [ "$destdisp" = "$curdisp" ]; then
    exit 0
fi

# Determine if the target display is on a VT or Xephyr
if [ "$destdisp" = '0' ]; then
    dest='aura_root_0'
else
    dest="`DISPLAY=":$destdisp" xprop -root 'XFree86_VT'`"
    dest="${dest##* }"
    if [ "${dest#[0-9]}" = "$dest" ]; then
        dest="Xephyr on :$destdisp.0"
    fi
fi

# Make sure tap-to-click is disabled
if hash xinput 2>/dev/null; then
    for id in `host-x11 xinput --list --id-only`; do
        host-x11 xinput set-prop "$id" 'Tap Paused' 0 2>/dev/null || true
    done
fi

# Raise the right window before chvting
if [ "${dest#[0-9]}" = "$dest" ]; then
    id="`host-x11 croutonwmtools list i | awk "/^$dest/"' {print $NF; exit}'`"
    if [ -n "$id" ]; then
        host-x11 croutonwmtools raise "$id"
    fi
    dest=1
fi

chvt "$dest"

# Refresh the display for good measure
if [ "$destdisp" != 0 ] && hash xrefresh 2>/dev/null; then
    DISPLAY=":$destdisp" xrefresh
fi
exit 0
